plugins {
    id 'war'  
}
description = 'Beam authorization manager app'
group 'org.jlab'
version '2.11.0'
ext.releaseDate = 'Jan 13 2021'
ext.resourceVersion = '32'

project.sourceCompatibility = JavaVersion.VERSION_11
project.targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()

    maven {
        url "https://s01.oss.sonatype.org/content/repositories/releases/"
    }
}

configurations {
    dockerBuild.extendsFrom testRuntimeOnly
}

dependencies {
    if (project.hasProperty("provided")) {
        providedCompile 'org.jsoup:jsoup:1.11.3',
                'org.jlab:smoothness-weblib:3.1.0',
                'org.tuckey:urlrewritefilter:4.0.4',
                'org.hibernate:hibernate-core:5.4.2.Final',
                'org.jlab:jlog:5.0.0'
    } else {
        implementation 'org.jsoup:jsoup:1.11.3',
                'org.jlab:smoothness-weblib:3.1.0',
                'org.tuckey:urlrewritefilter:4.0.4',
                'org.hibernate:hibernate-core:5.4.2.Final',
                'org.jlab:jlog:5.0.0'
    }

    providedCompile('antlr:antlr') {
        version {
            strictly "2.7.7"
        }
    }

    // No matter what the Java EE API is provided by the application server
    providedCompile 'javax:javaee-api:8.0'

    dockerBuild 'com.oracle.database.jdbc:ojdbc11:21.3.0.0'
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-Xlint:deprecation", "-Xlint:unchecked"]
}
war {
    archiveFileName = 'bam.war'
    filesMatching('WEB-INF/web.xml') {
        filter {
            String line -> line.replaceAll("@VERSION@", project.version)
        }
        filter {
            String line -> line.replaceAll("@RELEASE_DATE@", releaseDate)
        }
        filter {
            String line -> line.replaceAll("@RESOURCE_VERSION@", resourceVersion)
        }
    }
}

task prepareTestWithOracle(type: Copy) {
    from configurations.dockerBuild
    into './docker/wildfly/modules/com/oracle/database/jdbc/main'
    include 'ojdbc11-*.jar'
}

build.dependsOn(prepareTestWithOracle)

tasks.war.doLast {
    copy {
        from war
        into './docker/wildfly/standalone/deployments'
    }
}